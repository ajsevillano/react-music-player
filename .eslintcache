[{"E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\index.js":"1","E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\App.js":"2","E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\reportWebVitals.js":"3","E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\components\\Player.js":"4","E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\components\\Song.js":"5","E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\data.js":"6","E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\components\\Library.js":"7","E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\components\\LibrarySong.js":"8","E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\components\\Nav.js":"9","E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\utils.js":"10"},{"size":478,"mtime":1608128353436,"results":"11","hashOfConfig":"12"},{"size":1831,"mtime":1608666053918,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":3020,"mtime":1610917835039,"results":"15","hashOfConfig":"12"},{"size":269,"mtime":1608394038557,"results":"16","hashOfConfig":"12"},{"size":2219,"mtime":1608148781483,"results":"17","hashOfConfig":"12"},{"size":710,"mtime":1608565237707,"results":"18","hashOfConfig":"12"},{"size":925,"mtime":1610917382306,"results":"19","hashOfConfig":"12"},{"size":527,"mtime":1608564921865,"results":"20","hashOfConfig":"12"},{"size":293,"mtime":1610917641317,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1lsgfbl",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\index.js",[],["44","45"],"E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\App.js",[],"E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\reportWebVitals.js",[],"E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\components\\Player.js",["46"],"//UseEffect\r\nimport React, { useEffect } from 'react';\r\nimport { playAudio } from '../utils';\r\n\r\n//Import FontAwesome component\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//Import FontAwesome actual icons\r\nimport {\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPlay,\r\n  faPause,\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Player = ({\r\n  audioRef,\r\n  currentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setSongInfo,\r\n  songInfo,\r\n  songs,\r\n  setCurrentSong,\r\n  setSongs,\r\n}) => {\r\n  // UseEffect\r\n  useEffect(() => {\r\n    //Add active state\r\n    const newSongs = songs.map((song) => {\r\n      if (song.id === currentSong.id) {\r\n        return {\r\n          ...song,\r\n          active: true,\r\n        };\r\n      } else {\r\n        return {\r\n          ...song,\r\n          active: false,\r\n        };\r\n      }\r\n    });\r\n    setSongs(newSongs);\r\n  }, [currentSong]);\r\n\r\n  //Events Handlers\r\n  const playSongHandler = () => {\r\n    isPlaying ? audioRef.current.pause() : audioRef.current.play();\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    const timeValue = e.target.value;\r\n    audioRef.current.currentTime = e.target.value;\r\n    setSongInfo({ ...songInfo, currentTime: timeValue });\r\n  };\r\n\r\n  const skipTrackHandler = (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === 'skip-forward') {\r\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === 'skip-back') {\r\n      if ((currentIndex - 1) % songs.length === -1) {\r\n        setCurrentSong(songs[songs.length - 1]);\r\n        return;\r\n      }\r\n      setCurrentSong(songs[currentIndex - (1 % songs.length)]);\r\n    }\r\n    playAudio(isPlaying, audioRef);\r\n  };\r\n\r\n  //Aux function\r\n  const formatTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + ':' + ('0' + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{formatTime(songInfo.currentTime)}</p>\r\n        <input\r\n          min={0}\r\n          max={songInfo.duration || 0}\r\n          value={songInfo.currentTime}\r\n          onChange={dragHandler}\r\n          type=\"range\"\r\n        />\r\n        <p>{songInfo.duration ? formatTime(songInfo.duration) : '0:00'}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          onClick={() => {\r\n            skipTrackHandler('skip-back');\r\n          }}\r\n          className=\"skip-back\"\r\n          icon={faAngleLeft}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={playSongHandler}\r\n          className=\"play\"\r\n          icon={isPlaying ? faPause : faPlay}\r\n          size=\"2x\"\r\n        />\r\n        <FontAwesomeIcon\r\n          onClick={() => {\r\n            skipTrackHandler('skip-forward');\r\n          }}\r\n          className=\"skip-forward\"\r\n          icon={faAngleRight}\r\n          size=\"2x\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\components\\Song.js",[],"E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\data.js",[],"E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\components\\Library.js",[],"E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\components\\LibrarySong.js",[],"E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\components\\Nav.js",[],"E:\\Drive\\Aprender\\Jscript\\Sandbox\\React\\music-player\\src\\utils.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":43,"column":6,"nodeType":"53","endLine":43,"endColumn":19,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"60","text":"61"},[864,877],"[currentSong, setSongs, songs]"]